/////////////programa que implementa um percurso em grafo/////



#include <stdlib.h>
#include <stdio.h>
#include <time.h>

////Declaraco de var

const int TAMANHO=700;

//func que cria grafo

void criar (int grafo [TAMANHO][TAMANHO],int aleatorio){
    int i=0;
    int j=0;
    int aresta=0;

    for(i=0;i<TAMANHO;i++){
        for(j=0;j<TAMANHO;j++){
            grafo[i][j]=0;
        }

    }


    //preenchimento do grafo


    for(i=0;i<TAMANHO-1;i++){
        for(j=(i+1);j<TAMANHO;j++){
            if(aleatorio){
                aresta = (rand()%2);
            }else{
                printf("digite <1> se %d tem aresta com %d:",i,j);
                scanf("%d",&aresta);
            }

            grafo[i][j]=aresta;
            grafo[j][i]=aresta;
            }
        }
    }

int procurarPercursoRecursivo(int grafo[TAMANHO][TAMANHO],int visitado[TAMANHO],int inicio,int fim){

int vizinho=0;
int retorno=0;

if(inicio==fim){
    retorno=1;
}else{
    visitado[inicio]=1;
    for(vizinho=0; vizinho<TAMANHO;vizinho++){
        if((grafo[inicio][vizinho])&&(!visitado[vizinho])){
            if(procurarPercursoRecursivo(grafo,visitado,vizinho,fim)){
            retorno=1;
            printf("%d <-",vizinho);
            break;
            }
        }
    }
}
    }



//////func que executa a desxpoberta do caminho////

int procurarPercurso(int grafo[TAMANHO][TAMANHO],int inicio,int fim){
    int i=0;
    int visitado[TAMANHO];
    int encontrei =0;


    for(i=0;i<TAMANHO;i++){
        visitado[i]=0;
    }
    encontrei=procurarPercursoRecursivo(grafo,visitado,inicio,fim);
    printf("%d\n",inicio);


    return encontrei;
}



int main(){

    int grafo[TAMANHO][TAMANHO];
    int inicio =0;
    int fim=0;


    criar(grafo,1);

    printf("DIGITE o vertice inicial: ");
    scanf("%d",&inicio);

    printf("DIGITE o vertice final: ");
    scanf("%d",&fim);

    if(procurarPercurso(grafo,inicio,fim)){
        printf("ha um caminho !\n");
    }else{
        printf("nao HA UM CAMINHO! \n");

    }
}
